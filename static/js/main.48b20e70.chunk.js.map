{"version":3,"sources":["components/Button.js","components/NewGame.js","components/SaveGame.js","components/LoadGame.js","components/Menu.js","components/Cell.js","components/Grid.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["Button","props","className","name","value","callback","react_default","a","createElement","onClick","NewGame","rows","cols","resetGameField","htmlFor","type","id","maxLength","placeholder","autoFocus","onChange","e","currentTarget","components_Button","gameName","saveNewGame","LoadGame","loadSelectedGame","localStorageList","i","localStorage","length","key","push","loadGameList","map","game","index","Menu","isHidden","isNewField","isSaveGame","isLoadGame","showModal","animationToggle","bind","components_NewGame","SaveGame","components_LoadGame","Cell","isAlive","changeCellState","row","col","Grid","stateTable","cellsTable","j","components_Cell","concat","Game","components_Grid","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeModal","window","addEventListener","close","keyCode","setState","removeEventListener","modalName","defineProperty","initialSize","isNewGame","_this$state","state","setItem","JSON","stringify","selected","innerText","loadedRows","parse","getItem","loadedCols","loadedStateTable","showMessage","rule","alert","checkGameState","aliveCount","newStateTable","_this$state2","generation","getNextState","_this$state3","count","isAnimate","clearInterval","timer","setInterval","animationSpeed","generateStateTable","_this$state4","_this$state5","components_Menu","components_Game","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48b20e70.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/index.scss';\r\n\r\nconst Button = (props) => {\r\n  const {className, name, value, callback} = props;\r\n  \r\n  return (\r\n    <button className={className} name={name} onClick={callback}>{value}</button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  callback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"./Button.js\";\r\nimport '../styles/index.scss';\r\n\r\nconst NewGame = (props) => {\r\n  let rows, cols;\r\n  const rowsHandler = (e) => {\r\n    rows = +e.currentTarget.value;\r\n  };\r\n  const colsHandler = (e) => {\r\n    cols = +e.currentTarget.value;\r\n  };\r\n  \r\n  const {resetGameField} = props;\r\n  const resetFieldHandler = () => {\r\n    resetGameField(rows, cols);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"modal menu__modal\">\r\n      <h3 className=\"title menu__title\">Please, set up field size and click Ok\r\n      </h3>\r\n      <form className=\"menu__form\">\r\n        <label className=\"menu__label\" htmlFor=\"field-rows\">Rows</label>\r\n        <input className=\"menu__input\" name=\"rows\" type=\"text\" id=\"field-rows\" maxLength=\"1\" placeholder=\"0\" autoFocus onChange={rowsHandler}></input>\r\n        <label className=\"menu__label\" htmlFor=\"field-cols\">Cols</label>\r\n        <input className=\"menu__input\" name=\"cols\" type=\"text\" id=\"field-cols\" maxLength=\"1\" placeholder=\"0\" onChange={colsHandler}></input>\r\n      </form>\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"apply\"\r\n        value=\"Ok\"\r\n        callback={resetFieldHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nNewGame.propTypes = {\r\n  resetGameField: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGame;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"./Button.js\";\r\nimport '../styles/index.scss';\r\n\r\nconst NewGame = (props) => {\r\n  let gameName;\r\n  const gameNameHandler = (e) => {  \r\n    gameName = e.currentTarget.value;\r\n  };\r\n  \r\n  const {saveNewGame} = props;\r\n  const saveGameHandler = () => {\r\n    saveNewGame(gameName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal menu__modal\">\r\n      <h3 className=\"title menu__title\">Enter game name and click Save\r\n      </h3>\r\n      <input className=\"menu__input menu__input--save\" name=\"saveGame\" type=\"text\" placeholder=\"New save\" onChange={gameNameHandler}></input>\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"save\"\r\n        value=\"save\"\r\n        callback={saveGameHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nNewGame.propTypes = {\r\n  saveNewGame: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NewGame;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/index.scss';\r\n\r\nconst LoadGame = (props) => {\r\n  const {loadSelectedGame} = props;\r\n  \r\n  let localStorageList = [];\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    if (localStorage.key(i)) {\r\n      localStorageList.push(localStorage.key(i));\r\n    }\r\n  }\r\n  \r\n  let loadGameList = localStorageList.map((game, index) => {\r\n    return <li className=\"menu__item\" key={index} onClick={loadSelectedGame}>{game}</li>\r\n  })\r\n  \r\n  return (\r\n    <div className=\"modal menu__modal\">\r\n      <h3 className=\"title menu__title\">Click to load game in a list\r\n      </h3>\r\n      <ol className=\"menu__list\">\r\n        {loadGameList}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadGame.propTypes = {\r\n  loadSelectedGame: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LoadGame;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NewGame from \"./NewGame.js\";\r\nimport SaveGame from \"./SaveGame.js\";\r\nimport LoadGame from \"./LoadGame.js\";\r\nimport Button from \"./Button.js\";\r\nimport '../styles/index.scss';\r\n\r\nconst Menu = (props) => {\r\n  const {isHidden, isNewField, isSaveGame, isLoadGame, showModal, resetGameField, saveNewGame, loadSelectedGame, animationToggle} = props;\r\n  \r\n  return (\r\n    <section className=\"menu main__section\">\r\n      <h2 className=\"title menu__title\">Conway's Game of Life v1.0\r\n      </h2>\r\n      <p className=\"menu__subtitle\">To start playing, click cells on the game field and then push the Start/Stop button.</p>\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"newField\"\r\n        value=\"set new field\"\r\n        callback={showModal.bind(this, \"isNewField\")}\r\n      />\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"resetField\"\r\n        value=\"reset field\"\r\n        callback={resetGameField.bind(this, null, null)}\r\n      />\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"saveGame\"\r\n        value=\"save game\"\r\n        callback={showModal.bind(this, \"isSaveGame\")}\r\n      />\r\n      <Button\r\n        className=\"btn menu__btn\"\r\n        name=\"loadGame\"\r\n        value=\"load game\"\r\n        callback={showModal.bind(this, \"isLoadGame\")}\r\n      />\r\n      <Button\r\n        className=\"btn menu__btn menu__btn--animation\"\r\n        name=\"playGame\"\r\n        value=\"life\"\r\n        callback={animationToggle}\r\n      /> \r\n      {!isHidden && isNewField &&\r\n        <NewGame\r\n          resetGameField={resetGameField}\r\n        />}\r\n      {!isHidden && isSaveGame &&\r\n        <SaveGame\r\n          saveNewGame={saveNewGame}\r\n        />}\r\n      {!isHidden && isLoadGame && \r\n        <LoadGame\r\n          loadSelectedGame={loadSelectedGame}\r\n        />}\r\n    </section>\r\n  )\r\n};\r\n\r\nMenu.propTypes = {\r\n  isHidden: PropTypes.bool.isRequired,\r\n  isNewField: PropTypes.bool.isRequired,\r\n  isSaveGame: PropTypes.bool.isRequired,\r\n  isLoadGame: PropTypes.bool.isRequired,\r\n  showModal: PropTypes.func.isRequired,\r\n  resetGameField: PropTypes.func.isRequired,\r\n  saveNewGame: PropTypes.func.isRequired,\r\n  loadSelectedGame: PropTypes.func.isRequired,\r\n  animationToggle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/index.scss';\r\n\r\nconst Cell = (props) => {\r\n  const {isAlive, changeCellState, row, col} = props;\r\n  \r\n  return (\r\n    <div \r\n      className={isAlive\r\n        ? \"table__cell table__cell--green\"\r\n        : \"table__cell\"\r\n      }\r\n      onClick={changeCellState.bind(this, row, col)}\t\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nCell.propTypes = {\r\n  row: PropTypes.number.isRequired,\r\n  col: PropTypes.number.isRequired,\r\n  isAlive: PropTypes.bool.isRequired,\r\n  changeCellState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/index.scss';\r\nimport Cell from \"./Cell.js\";\r\n\r\nconst Grid = (props) => {\r\n  const {rows, cols, stateTable, changeCellState} = props;\r\n  \r\n  //Make array of cells with state\r\n  let cellsTable = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    cellsTable[i] = [];\r\n    for (let j = 0; j < cols; j++) {\r\n      cellsTable[i][j] = \r\n        <Cell\r\n          key={`${i}.${j}`}\r\n          row={i} \r\n          col={j}\r\n          isAlive={stateTable[i][j]}\r\n          changeCellState={changeCellState}\r\n        />;\r\n    }\r\n  }\r\n  \r\n  //Make array of rows with cells\r\n  let grid = cellsTable.map((row, index) => {\r\n    return <div className=\"table__row\" key={index}>{row}</div>\r\n  })\r\n   \r\n  return (\r\n    grid\r\n  )\r\n};\r\n\r\nGrid.propTypes = {\r\n  rows: PropTypes.number.isRequired,\r\n  cols: PropTypes.number.isRequired,\r\n  stateTable: PropTypes.array.isRequired,\r\n  changeCellState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"./Grid.js\";\r\nimport '../styles/index.scss';\r\n\r\nconst Game = (props) => {\r\n  const {rows, cols, stateTable, changeCellState} = props;\r\n\r\n  return (\r\n    <section className=\"game main__section\">\r\n      <div className=\"table game__table\">\r\n        <Grid\r\n          rows={rows}\r\n          cols={cols}\r\n          stateTable={stateTable}\r\n          changeCellState={changeCellState}\r\n        />\r\n      </div>\r\n    </section>\r\n  )\r\n};\r\n\r\nGame.propTypes = {\r\n  rows: PropTypes.number.isRequired,\r\n  cols: PropTypes.number.isRequired,\r\n  stateTable: PropTypes.array.isRequired,\r\n  changeCellState: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport Menu from \"./Menu.js\";\r\nimport Game from \"./Game.js\";\r\nimport '../styles/index.scss';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.initialSize = 5;\r\n    this.animationSpeed = 1000;\r\n    \r\n    this.state = {\r\n      rows: this.initialSize,\r\n      cols: this.initialSize,\r\n      stateTable: [],\r\n      game: {},\r\n      generation: [],\r\n      isNewGame: true,\r\n      isHidden: true,\r\n      isNewField: false,\r\n      isSaveGame: false,\r\n      isLoadGame: false,\r\n      isAnimate: false\r\n    };\r\n  };\r\n\r\n  closeModal = () => {\r\n    const escKeycode = 27;\r\n    let close = (e) => {\r\n      if (e.keyCode === escKeycode) {\r\n        this.setState ({\r\n          isHidden: true,\r\n          isSaveGame: false,\r\n          isLoadGame: false,\r\n          isNewField: false\r\n        })\r\n        window.removeEventListener(\"keydown\", close);\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", close);\r\n  };\r\n  \r\n  showModal = (modalName) => {\r\n    this.closeModal();\r\n    this.setState ({\r\n      isHidden: false,\r\n      [modalName]: true\r\n    })\r\n  };\r\n\r\n  resetGameField = (rows, cols) => {\r\n    this.setState ({\r\n      rows: rows || this.initialSize,\r\n      cols: cols || this.initialSize,\r\n      isNewGame: true,\r\n      isHidden: true,\r\n      isNewField: false\r\n    })\r\n  };\r\n\r\n  //Сохраняет игру\r\n  saveNewGame = (gameName) => {\r\n    const {rows, cols, stateTable, game} = this.state;\r\n    \r\n    game.name = gameName\r\n    game.state = stateTable;\r\n    game.rows = rows;\r\n    game.cols = cols;\r\n    localStorage.setItem(gameName, JSON.stringify(game));\r\n    \r\n    this.setState ({\r\n      isHidden: true,\r\n      isSaveGame: false\r\n    })\r\n  };\r\n\r\n  //Загружает сохранённую игру\r\n  loadSelectedGame = (e) => {\r\n    let selected = e.currentTarget.innerText;\r\n    let loadedRows = JSON.parse(localStorage.getItem(selected)).rows;\r\n    let loadedCols = JSON.parse(localStorage.getItem(selected)).cols;\r\n    let loadedStateTable = JSON.parse(localStorage.getItem(selected)).state;\r\n    this.setState ({\r\n      isNewGame: false,\r\n      isHidden: true,\r\n      isLoadGame: false,\r\n      rows: loadedRows,\r\n      cols: loadedCols,\r\n      stateTable: loadedStateTable\r\n    })\r\n  };\r\n\r\n  showMessage = (rule) => {\r\n    switch(rule) {\r\n      case \"all dead\":\r\n        alert(\"Dear friend, all your population are dead. Game is over, have fun and good luck next time\");\r\n        break;\r\n      case \"stable configuration\":\r\n        alert(\"Dear friend, your last configuration has a loop. Game is over, have fun and good luck next time\");\r\n        break;\r\n      case \"periodic configuration\":\r\n        alert(\"Dear friend, one of your configuration has loop. Game is over, have fun and good luck next time\");\r\n        break;\r\n      default:\r\n        alert(\"Game is over with no reasons. Please, restart the game\");\r\n    }\r\n  };\r\n\r\n  checkGameState = (aliveCount, newStateTable) => {\r\n    const {stateTable, generation} = this.state;\r\n    \r\n    if (!aliveCount) {\r\n      this.animationToggle();\r\n      this.showMessage(\"all dead\");\r\n    } else\r\n    if (JSON.stringify(stateTable) === JSON.stringify(newStateTable)) {\r\n      this.animationToggle();\r\n      this.showMessage(\"stable configuration\");\r\n    } else\r\n    for (let i = 0; i < generation.length; i++) {\r\n      if (JSON.stringify(generation[i]) === JSON.stringify(newStateTable)) {\r\n        this.animationToggle();\r\n        this.showMessage(\"periodic configuration\");\r\n      }  \r\n    }\r\n  };\r\n\r\n  //Генерирует новое поколение через 1 секунду\r\n  getNextState = () => {\r\n    const {rows, cols, stateTable, generation} = this.state;\r\n    const newStateTable = JSON.parse(JSON.stringify(stateTable));\r\n    let aliveCount = 0;\r\n    \r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        let count = 0;\r\n        i > 0 && stateTable[i-1][j] && count++;\r\n        (i > 0 && j > 0) && stateTable[i - 1][j - 1] && count++;\r\n        (i > 0 && j < cols - 1) && stateTable[i - 1][j + 1] && count++;\r\n        (j < cols - 1) && stateTable[i][j + 1] && count++;\r\n        j > 0 && stateTable[i][j - 1] && count++;\r\n        (i < rows - 1) && stateTable[i + 1][j] && count++;\r\n        (i < rows - 1 && j > 0) && stateTable[i + 1][j - 1] && count++;\r\n        (i < rows - 1 && j < cols - 1) && stateTable[i + 1][j + 1] && count++;\r\n        stateTable[i][j] && aliveCount++;\r\n        if (stateTable[i][j] && (count < 2 || count > 3)) {\r\n          newStateTable[i][j] = false;\r\n        }\r\n        if (!stateTable[i][j] && (count === 3)) {\r\n          newStateTable[i][j] = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.checkGameState(aliveCount, newStateTable);\r\n    generation.push(newStateTable);\r\n    this.setState ({\r\n      stateTable: newStateTable\r\n    })\r\n  };\r\n\r\n  //Запускает\\Останавливает игру по клику по кнопке\r\n  animationToggle = () => {\r\n    const {isAnimate} = this.state;\r\n    \r\n    if (isAnimate) {\r\n      clearInterval(this.timer);\r\n      this.setState ({isAnimate: false, generation: []});\r\n    } else {\r\n      this.setState ({isAnimate: true});\r\n      this.timer = setInterval(this.getNextState, this.animationSpeed);\r\n    }\r\n  };\r\n\r\n  //Toggle cell state (dead/alive) by mouse click\r\n  changeCellState = (row, col) => {\r\n    const {stateTable} = this.state;\r\n    stateTable[row][col] = !stateTable[row][col];\r\n    this.setState ({\r\n      isNewGame: false\r\n    })\r\n  };\r\n\r\n  //Make new state table in a New Game mode\r\n  generateStateTable = () => {\r\n    const {rows, cols, stateTable} = this.state;\r\n    for (let i = 0; i < rows; i++) {\r\n      stateTable[i] = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        stateTable[i][j] = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {isNewGame, isHidden, isNewField, isSaveGame, isLoadGame, rows, cols, stateTable} = this.state;\r\n    isNewGame && this.generateStateTable();\r\n    \r\n    return (\r\n      <div className=\"app\">\r\n        <main className=\"main app__main\">\r\n          <Menu\r\n            isHidden={isHidden}\r\n            isNewField={isNewField}\r\n            isSaveGame={isSaveGame}\r\n            isLoadGame={isLoadGame}\r\n            showModal={this.showModal}\r\n            resetGameField={this.resetGameField}\r\n            saveNewGame={this.saveNewGame}\r\n            loadSelectedGame={this.loadSelectedGame}\r\n            animationToggle={this.animationToggle}\r\n          />\r\n          <Game \r\n            rows={rows}\r\n            cols={cols}\r\n            stateTable={stateTable}\r\n            changeCellState={this.changeCellState}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}